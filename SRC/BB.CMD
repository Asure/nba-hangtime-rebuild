/*	Game linker command file					*/
/*-e WARMSET*/			/* entry point of program		*/
-e init_prog			/* entry point of program		*/
-f 0xFFFF			/* fill unspecified memory with value	*/
-o c:\video\bball\BB.out	/* specify output file			*/
-m c:\video\bball\BB.map	/* map file				*/
-s				/* kill the symbol table		*/

NDSP1.OBJ		/* fixed file. GSP display processor */
MAIN.OBJ		/* fixed file. initialization and interrupts */
UTIL.OBJ		/* fixed file. utility subroutines */
PAL.OBJ			/* fixed file. palette allocator and fader control */
MPROC.OBJ		/* fixed file. GSP multi-processing system */
BAKGND.OBJ		/* fixed file. background handlers */
BGNDTBL.OBJ		/* BACKGROUND TABLES */
BGNDPAL.OBJ		/* BACKGROUND PALETTES */
IMGTBL.OBJ		/* IMAGE STUB */
IMGPAL.OBJ		/* IMAGE PALETTES GENERATED BY LOADIMG */
BB.OBJ			/* fixed file. Basketball game program */
BB2.OBJ			/* fixed file. Basketball game program */
BB3.OBJ			/* fixed file. Basketball game program */
BB4.OBJ			/* fixed file. Basketball game program */
DRONE.OBJ		/* fixed file. needs doublecheck. basketball drone code */
/* PLYR.OBJ		fixed file. basketball player code. Out of memory. Split */
PLYR_1.OBJ		/* These are just PLYR.ASM split up. */
PLYR_2.OBJ              /* These are just PLYR.ASM split up. */
PLYR2.OBJ		/* TODO. basketball player code !!AM check me someday!! */
PLYR3.OBJ		/* fixed file. basketball player code */
PLYRAT.OBJ		/* no changes. basketball player code */
PLYRAT2.OBJ		/* fixed file. basketball player code */
/* PLYRSEQ.OBJ		fixed file. basketball plyr sequence code. Out of memory. Split */
PLYRSEQA.OBJ		/* These are just PLYRSEQ.ASM split up. */
PLYRSEQB.OBJ            /* These are just PLYRSEQ.ASM split up. */
PLYRRSEQ.OBJ		/* fixed file. basketball plyr run sequence code */
PLYRSEQ2.OBJ		/* fixed file. basketball plyr sequence code */
PLYRDSEQ.OBJ		/* nightmare, but done fixin. basketball plyr dunk sequence code */
PLYRDSQ2.OBJ		/* fixed file. basketball plyr dunk sequence code*/
PLYRLSEQ.OBJ		/* fixed file. basketball plyr layups sequence code  */
PLYRSTND.OBJ		/* fixed file. basketball plyr stand sequence code */
SCORE.OBJ		/* fixed file. doublecheck! score stuff,clocks,on fire clk.. */
SCORE2.OBJ		/* fixed file. score stuff */
SOUNDS.OBJ		/* fixed file. sound processor */
PATCH.OBJ		/* file OK. TV PATCH/BREAKPOINT HOOK */
TEXT.OBJ		/* fixed file, had to comment stuff to avoid mem error! font tables */
TEXT2.OBJ		/* added file, memory issues when compiling. the tables are needed! */
ATTRACT.OBJ		/* fixed file. attract mode */
STRING.OBJ		/* fixed file. string printing stuff !!AM!! check for # symbol !! */
RECORD.OBJ		/* fixed file. CMOS records etc !!AM!! check for # symbol !! */
SPEECH.OBJ		/* fixed file. announcer speech etc... */
SELECT.OBJ		/* fixed file. name & team selection */
/* SELECT2.OBJ		fixed file. split to sel2_1 and sel2_2. name & team selection */
SEL2_1.OBJ
SEL2_2.OBJ
ADJUST.OBJ		/* fixed file. TEST MENUS ADJUSTMENT CODE */
AUDIT.OBJ		/* fixed file. audits and adjustments handling */
TEST.OBJ		/* fixed file. test program */
DIAG.OBJ		/* no fixes needed. SYSTEM DIAGNOSTICS CODE */
MENU.OBJ		/* fixed file. test menus */
HSTD.OBJ		/* fixed file. robo high-score-to-date management */
MAKEPLR.OBJ		/* no fixes needed. create player logic */
MAKEPLR2.OBJ		/* no fixes needed. create player logic */
SCREEN.OBJ		/* fixed file. */
SELECT3.OBJ		/* fixed file. */
SELECT4.OBJ		/* fixed file. */
PLYRAT3.OBJ		/* fixed file. basketball player code */
UNZIP.OBJ               /* fixed file. Unzip gfx routines. */

MEMORY				/* set up memory for sdb board */
{
 SCRATCH	: org = 0x01000000,	len = 0x3f7300
 SCRATCHTV	: org = 0x013f7300,	len = 0x8d00
 ROM		: org = 0xFF800000,	len = 0x7F6F00
 ROMTV		: org = 0xFFFF6F00,	len = 0x8D00
 TRAP31		: org = 0xFFFFFC00,	len = 0x400
 IROM		: org = 0x02000000,	len = 0x400000
}

SECTIONS			/* linker sections directive */
{
	VECTORS: {} > TRAP31
	IMAGES:  {} > IROM
	GROUP:
	      {
	        shit: {}
	        SHIT: {}
	      } > ROMTV
	GROUP:
	      {
	        STACK: {}
	        PRCBSS: {}
	        OBJBSS: {}
	       .BSS: {}
	       .bss: {}
	      } > SCRATCH

	.text:	{}	> ROM
	.TEXT:	{}	> ROM
	.data:	{}	> ROM
	.DATA:	{}	> ROM
        img_tbl: {}	> ROM
}

